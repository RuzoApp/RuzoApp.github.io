//GLOBAL VARIABLES
FIREBASE_ROOT = "https://studybuddyapp.firebaseio.com";
USER_ID = null;

//=====================================================================
//                              USERS
//=====================================================================


// ADD NEW USER TO THE DB
function pushNewUser(first_name, last_name, email, study_session_minutes, short_break_minutes, long_break_minutes) {
    // CREATE A REFERENCE TO FIREBASE
    var usersRef = new Firebase(FIREBASE_ROOT + '/Users');

    //SAVE DATA TO FIREBASE
    // I generated a reference to a new location (e.i. assigned the push into a
    // variable (newUserRef)), although it is not necessary, so that we could in the future
    // get the unique ID generated by push() by doing newUserRef.key();
    var newUserRef =  usersRef.push({
        first_name:first_name,
        last_name:last_name,
        email:email,
        study_session_minutes:study_session_minutes,
        short_break_minutes:short_break_minutes,
        long_break_minutes:long_break_minutes,
        // SET A FALSY VALUE (0) UNTIL WE HAVE ACTUAL DATA TO THROW INTO "Subjects"
        // (MEANING UNTIL THE USER CREATES THEIR OWN SUBJECTS).
        // ONCE THE USER CREATES A SUBJECT, A PUSH COMMEND SUCH AS
        // subjectsRef.push({name: "Irish"}); WILL OVERIDE THE FALSY VALUE.
        Subjects:0
    });
};

// RETRIEVE AND DISPLAY ALL USERS INFORMATION UPON REQUEST
function fetchAllUsers() {
    var usersRef = new Firebase(FIREBASE_ROOT + '/Users');
    var users = [];
    // WE CAN ALWAYS ADD .limitToLast(10) TO usersRef IF WE'D WANT TO DISPLAY JUST THE FIRST 10 USERS.
    usersRef.once("value", function(snapshot) {
        $.each(snapshot.val(), function(key, value){
            users.push(value)
        });
        displayAllUsers(users);
    });
}

// RETRIEVE AND DISPLAY ALL USERS INFORMATION INSTANTLY WHEN PAGE FINISHES LOADING
$(document).ready(function(){
    var usersRef = new Firebase(FIREBASE_ROOT + '/Users');
    var users = [];
    usersRef.once("value", function(snapshot) {
        $.each(snapshot.val(), function(key, value){
            users.push(value)
        });
        displayAllUsers(users);
    });
});


//=====================================================================
//                              SUBJECTS
//=====================================================================


// Right now we are allways working with the same user, so I'm hard coding her user id.
// After we'll sort user authentication, we will create the needed functionality to
// assign USER_ID the id of whichever user happened to login.
USER_ID = "-JsW00pjdJPb_cDgZuxT";

// ADD NEW USER TO THE DB
function pushNewSubject(name, colour, study_session_minutes, short_break_minutes, long_break_minutes) {
    // CREATE A REFERENCE TO FIREBASE
    var subjectsRef = new Firebase(FIREBASE_ROOT + '/Users/' + USER_ID + '/Subjects');

    //SAVE DATA TO FIREBASE
    // I generated a reference to a new location (e.i. assigned the push into a
    // variable (newSubjectRef)), although it is not necessary, so that we could in the future
    // get the unique ID generated by push() by doing newSubjectRef.key();
    var newSubjectRef =  subjectsRef.push({
        name:name,
        colour:colour,
        study_session_minutes:study_session_minutes,
        short_break_minutes:short_break_minutes,
        long_break_minutes:long_break_minutes,
        // SET A FALSY VALUE (0) UNTIL WE HAVE ACTUAL DATA TO THROW INTO "Tasks"
        // (MEANING UNTIL THE USER CREATES THEIR OWN TASKS).
        // ONCE THE USER CREATES A TASK, A PUSH COMMEND SUCH AS
        // tasksRef.push({title: "Read chapter 12"}); WILL OVERIDE THE FALSY VALUE.
        Tasks:0
    });
};

// RETRIEVE AND DISPLAY ALL SUBJECTS INFORMATION UPON REQUEST
function fetchAllSubjects() {
    var subjectssRef = new Firebase(FIREBASE_ROOT + '/Users/' + USER_ID + '/Subjects');
    var subjects = [];
    // WE CAN ALWAYS ADD .limitToLast(10) TO usersRef IF WE'D WANT TO DISPLAY JUST THE FIRST 10 USERS.
    subjectssRef.once("value", function(snapshot) {
        $.each(snapshot.val(), function(key, value){
            subjects.push(value)
        });
        displayAllSubjects(subjects);
    });
}

// RETRIEVE AND DISPLAY ALL SUBJECTS INFORMATION INSTANTLY WHEN PAGE FINISHES LOADING
$(document).ready(function(){
    var subjectssRef = new Firebase(FIREBASE_ROOT + '/Users/' + USER_ID + '/Subjects');
    var subjects = [];
    subjectssRef.once("value", function(snapshot) {
        $.each(snapshot.val(), function(key, value){
            subjects.push(value)
        });
        displayAllSubjects(subjects);
    });
});